/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        new_behavior1: new_behavior1 {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR1";
            #binding-cells = <2>;
            hold-trigger-key-positions = <0>;
            tapping-term-ms = <200>;
            bindings = <&new_macro>, <&kp>;
        };

        h3_3: h3_3 {
            compatible = "zmk,behavior-hold-tap";
            label = "H3_3";
            #binding-cells = <2>;
            hold-trigger-key-positions = <3>;
            tapping-term-ms = <200>;
            bindings = <&h3>, <&kp>;
        };

        h4_4: h4_4 {
            compatible = "zmk,behavior-hold-tap";
            label = "H4_4";
            #binding-cells = <2>;
            hold-trigger-key-positions = <4>;
            tapping-term-ms = <200>;
            bindings = <&h4>, <&kp>;
        };

        h5_5: h5_5 {
            compatible = "zmk,behavior-hold-tap";
            label = "H5_5";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&h5>, <&kp>;

            hold-trigger-key-positions = <5>;
        };

        h6_6: h6_6 {
            compatible = "zmk,behavior-hold-tap";
            label = "H6_6";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&h6>, <&kp>;

            hold-trigger-key-positions = <8>;
        };

        div_d: div_d {
            compatible = "zmk,behavior-hold-tap";
            label = "DIV_D";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&div>, <&kp>;

            hold-trigger-key-positions = <31>;
        };

        span_s: span_s {
            compatible = "zmk,behavior-hold-tap";
            label = "SPAN_S";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&span>, <&kp>;

            hold-trigger-key-positions = <30>;
        };

        p_p: p_p {
            compatible = "zmk,behavior-hold-tap";
            label = "P_P";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&p>, <&kp>;

            hold-trigger-key-positions = <26>;
        };

        button_b: button_b {
            compatible = "zmk,behavior-hold-tap";
            label = "BUTTON_B";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&button>, <&kp>;

            hold-trigger-key-positions = <53>;
        };

        section_s: section_s {
            compatible = "zmk,behavior-hold-tap";
            label = "SECTION_S";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&section>, <&kp>;

            hold-trigger-key-positions = <17>;
        };

        main_m: main_m {
            compatible = "zmk,behavior-hold-tap";
            label = "MAIN_M";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&main>, <&kp>;

            hold-trigger-key-positions = <63>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp T>;
            label = "NEW_MACRO";
        };

        className: className {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp L &kp A &kp S &kp S &kp LS(N) &kp A &kp M &kp E &kp EQUAL &kp DQT &kp DQT &kp LEFT_ARROW>;
            label = "CLASSNAME";
        };

        h3: h3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp POUND &kp POUND &kp SPACE>;
            label = "H3";
        };

        h4: h4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp POUND &kp POUND &kp POUND &kp SPACE>;
            label = "H4";
        };

        h5: h5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp POUND &kp POUND &kp POUND &kp POUND &kp SPACE>;
            label = "H5";
        };

        h6: h6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp POUND &kp POUND &kp POUND &kp POUND &kp POUND &kp SPACE>;
            label = "H6";
        };

        div: div {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp D &kp I &kp V &kp GT &kp LT &kp FSLH &kp D &kp I &kp V &kp GT &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "DIV";
        };

        span: span {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp S &kp P &kp A &kp N &kp GT &kp LT &kp FSLH &kp S &kp P &kp A &kp N &kp GT &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "SPAN";
        };

        p: p {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp P &kp GT &kp LT &kp FSLH &kp P &kp GT &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "P";
        };

        main: main {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp M &kp A &kp I &kp N &kp GT &kp LT &kp FSLH &kp M &kp A &kp I &kp N &kp GT &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "MAIN";
        };

        section: section {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp S &kp E &kp C &kp T &kp I &kp O &kp N &kp GT &kp LT &kp FSLH &kp S &kp E &kp C &kp T &kp I &kp O &kp N &kp GT &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "SECTION";
        };

        button: button {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp B &kp U &kp T &kp T &kp O &kp N &kp GT &kp LT &kp FSLH &kp B &kp U &kp T &kp T &kp O &kp N &kp GT &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW &kp LEFT_ARROW>;
            label = "BUTTON";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&new_behavior1 0 EQUAL  &kp N1     &kp N2        &h3_3 0 NUMBER_3  &h4_4 0 NUMBER_4  &h5_5 0 NUMBER_5  &tog 1                                                                                                                 &mo 3       &h6_6 0 NUMBER_6  &kp N7        &kp N8          &kp N9            &kp N0             &kp MINUS
&kp TAB                 &kp Q      &kp W         &section_s 0 E    &kp R             &kp T             &kp F21                                                                                                                &kp F22     &kp Y             &kp U         &kp I           &kp O             &p_p 0 P           &kp BACKSLASH
&kp ESC                 &kp A      &span_s 0 S   &div_d 0 D        &kp F             &kp G             &className     &kp LEFT_COMMAND  &kp LALT          &kp LGUI   &kp RIGHT_COMMAND  &kp RIGHT_COMMAND  &kp RIGHT_CONTROL  &macro_pw2  &kp H             &kp J         &kp K           &kp L             &kp SEMICOLON      &kp APOSTROPHE
&kp LEFT_SHIFT          &kp Z      &kp X         &kp C             &kp V             &button_b 0 B     &kp ESCAPE     &none             &kp ESCAPE        &kp PG_UP  &none              &kp PAGE_UP        &kp N              &kp M       &kp N             &main_m 0 M   &kp COMMA       &kp DOT           &kp SLASH          &kp RIGHT_SHIFT
&mo 2                   &kp GRAVE  &kp CAPSLOCK  &kp LEFT_ARROW    &kp RIGHT_ARROW                     &kp BACKSPACE  &kp LEFT_COMMAND  &kp LEFT_CONTROL                                &kp AT             &kp ENTER          &kp SPACE                     &kp UP_ARROW  &kp DOWN_ARROW  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1    &kp N2     &kp N3    &kp N4   &kp N5  &trans                                                                   &mo 3      &kp N6     &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q     &kp W      &kp E     &kp R    &kp T   &none                                                                    &none      &kp Z      &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A     &kp S      &kp D     &kp F    &kp G   &none     &kp LCTRL  &kp LALT   &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS   &kp SQT        &kp LSHFT        &kp Y
&kp X      &kp C     &kp V      &kp B     &none    &none   &kp HOME  &none      &none      &kp PG_UP  &none      &none      &kp N   &kp KP_N1  &kp KP_N2  &kp KP_N3   &kp KP_ENTER  &kp RSHFT      &mo 2            &kp GRAVE
&kp CAPS   &kp LEFT  &kp RIGHT  &kp BSPC  &kp DEL          &kp END   &kp PG_DN  &kp ENTER                        &kp KP_N0  &kp UP  &kp DOWN              &kp KP_DOT  &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                                  &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                                   &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans  &trans  &trans  &none   &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &none   &none   &trans  &none   &none   &trans  &none   &none   &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                                                       &trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none            &none         &none         &bootloader                                                                                                 &bootloader  &none         &none         &none         &none         &none         &none
&none  &none         &none         &none            &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none       &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none       &none        &none         &none         &none         &none         &none         &none
&none  &none         &none         &none            &none         &none         &none                   &none       &none       &none       &none       &none                   &none       &none        &none         &none         &none         &none         &none         &none
&none  &bl BL_INC    &bl BL_DEC    &rgb_ug RGB_TOG  &bl BL_TOG                  &none                   &none       &bl BL_TOG                          &rgb_ug RGB_TOG         &bl BL_INC  &bl BL_DEC                 &none         &none         &none
            >;
        };
    };
};
